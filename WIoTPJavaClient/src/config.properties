################################################
# WIOT Messaging Test Client (MQTTv3)
# Configuration File
# last edited: 2017-01-17
################################################

### USAGE ###
#  Decide whether to use APP or DEVICE Client
#  Device Client:
#  1. Configure correct profile location: IotProfileLocation=...
#  2. Decide whether to use SSL or Non-SSL. For SSL configure correct TrustStore+Pwd: 
#     ClientTrustStoreLocation= / ClientTrustStorePwd=
#  3. Decide whether to create Publisher, Subscriber or both: CreatePublisher= / CreateSubscriber=
#  4. Configure correct topic string(s) for Subscriber and Publisher depending on whether client 
#     is DEVICE or APP!!!
#  5. Configure subscriber/publisher specific properties, e.g. no of msg to create, bust interval, location of received msg
##############

# Set Logger name and level (default=FINEST, WARNING, SEVERE)
# Determine where to log: FILE | CONSOLE | CONSOLE_AND_FILE
# Provide log file location
LoggerName = com.ibm.labsvcbb.iot.test.IoTMsgTestClient
LoggerLevel = FINEST
LogTarget = CONSOLE
LogFileLocation = .IoTMsgTestClient.log
	
# Allow for interactive console Mode (pressing keyboard key ends the receiver client thread)
# TRUE (=default) | FALSE (Note: only for receiver clients)
RunInConsoleMode = TRUE

# WIoTP CLIENT TYPE (DEVICE | APPLICATION):
WIoTPClientType = DEVICE

# WIoTP client configuration file, either for DEVICE or APPLICATION client
# WIoTPClientConfigFile = /application.properties 
WIoTPClientConfigFile = /device.properties



#################################
# MQTT Connection configuration #
#################################

# Provide connection parameters of the IOT Cloud instance to which the connection is established
# Indicate whether an IOT device profile file should be used as configuration for
# connection parameters (if TRUE: UserName, UserPassword, BrokerHostname, BrokerPort, 
USE_IOT_PROFILE = TRUE
	# IOT QUICKSTART CLOUD: IotProfileLocation = config/profile_quickstartcloud.properties
	# IOT CLOUD DEVICE config: 
	  IotProfileLocation = config/profile_DEVICE_IOTcloud.properties
	# IOT CLOUD APP config: 
	 # IotProfileLocation = config/profile_APP_IOTcloud.properties
	

# If UserName and UserPassword are provided, connection is established using these settings.
# (or use IOT profile setting)
# IOT BETA CLOUD convention for registered devices: comment out here and use in IOT profile config file!
# UserName=DONTUSE switches username/pwd off!
#UserName=DONTUSE
#UserPassword=test


# Location ID of the XPDinteg instance (required if the client connects to IBM Expeditor integrator)
# Provide IOT TENANT ID here (or use IOT profile setting)
LocationId = my_iot_tenant_id

# Hostname or IP address of MQTT broker (or use IOT profile setting)
# value = MULTIPLE specifies that multiple broker URIs are provided. Param BrokerPort is ignored in 
# this case e.g. 
# BrokerHostname = MULTIPLE
# BrokerURI1 = tcp://localhost:1883
# BrokerURI2 = ssl://localhost:8883
BrokerHostname = 127.0.0.1

# MQTT Broker connection port (defaults: 1883 for TCP and 8883 for SSL)
# (or use IOT profile setting)
BrokerPort = 1883
# Use TLS/SSL (TRUE | FALSE) - Remember to use the correct SSL port on micro broker!
# SSLTLSVersion = Provide the protocol version if other than "TLSv1" should be used (IOT BETA requires "TLSv1.2" !!)
UseSSL = FALSE
SSLTLSVersion = TLSv1.2
# Key and Trust store location
# NOTE: If no key store is provided, Client-auth is used
# If key and trust store locations are provided, mutual auth is used
#ClientKeyStoreLocation = config/ssl/JmsIdeClient_KeyStore.jks
#ClientKeyStorePwd = kspassw0rd
  #ClientTrustStoreLocation = config/ssl/JmsIdeClient_TrustStore.jks
ClientTrustStoreLocation = config/ssl/JmsIdeClient_TrustStore_wIOTFoundation.jks
ClientTrustStorePwd = tspassw0rd

# Set whether client and server remember state across restarts and reconnects.
# FALSE: client/server remember state and QoS = durable, TRUE: no state recognition = non-durable
# (is equivalent to parameter: TopicSubscriberNonDurable)
  #MqttCleanSession = FALSE
# IOT QUICKSTART does not support durable connections, MqttCleanSession must be TRUE!
MqttCleanSession = TRUE

# Time in msec to wait before the action times out and until client 
# returns control back to application (e.g. retry interval for establishing connection)
# Value 0 or -1 will wait until the action finishes and will not timeout
#MqttReconnectWait = 0

# Connection "keep alive" interval in sec (maximum time interval between messages sent 
# or received. Client can detect if the server is no longer available, w/o waiting for 
# TCP/IP timeout. The client will ensure that at least one message travels across the 
# network within each keep alive period. In the absence of a data-related message during 
# the time period, the client sends a very small "ping" message, which the server will 
# acknowledge. A value of 0 disables keepalive processing in the client. Default = 60 seconds
MqttKeepAliveInterval = 0

# Maximum time interval in sec the client waits until network connection is established. 
# default = 30sec, 0 = disables (client waits until the network connection is available or fails)
#MqttConnectTimeout = 0

# MQTT persistence for sending messages: FILE or NONE = in memory (default)
MqttPersistence = FILE
# Configure directory for persisted messages to be sent if MqttPersistence is set to FILE
PersistenceStoreDirectory = ./persMsgs

# Connection retry attempts: Specify how often in msec and in which interval re-connect attempts should
# be taken before program terminates (default = 1 retry every 10 sec for 100 times) 
ConnectionMaxNoOfRetryAttempts = 5
ConnectionRetryAttemptInterval = 10000


##########################
# SENDER configuration #
##########################

# Define whether to use the client as publisher also (default = TRUE)
CreatePublisher = TRUE

# Target topic to which message is sent / published (SENDER mode)
	#TargetTopicName = XPDinteg_MqttTestTopic
	#TargetTopicName = /testdomain/things/mqtttestreceiver
# IOT BETA CLOUD Topic convention:
# iot-1/$Tenant/d/$Device-id/evt/$MessageType/$Format,
#	$MessageType = DataSet name, Format = json, e.g. tenant xpdi:
# 		iot-1/3632e603-b6a7-435b-bbc8-c5aafbc8a4e7/d/011/evt/SpeedMon/json
# CHANGE 13.04.2014: w/o TenantID !
	#TargetTopicName = iot-1/3632e603-b6a7-435b-bbc8-c5aafbc8a4e7/d/011/evt/SpeedMon/json
	#TargetTopicName = iot-1/3632e603-b6a7-435b-bbc8-c5aafbc8a4e7/d/022/evt/Device SDK Weather Sample Dataset/json
	#TargetTopicName = iot-1/d/022/evt/weather/json
# CHANGE 22.05.2014: USE specific IOT Quickstart CLOUD topic format: <device.id> and <topic.msgtype.string> 
# are replaced with values from profile properties file:
  #TargetTopicName = iot-1/d/<device.id>/evt/<topic.msgtype.string>/json
# NEW 16.07.2014: USE specific IOT Quickstart CLOUD topic format: iot-2/evt/<pubtopic.eventtype.string>/<pubtopic.msgtype.string>/<pubtopic.msgformat>
# are replaced with values from profile properties file:
 # IOT DEVICE client:
	TargetTopicName = iot-2/evt/<pubtopic.eventtype.string>/<pubtopic.msgtype.string>/<pubtopic.msgformat>
 # IOT APP client:
 	#TargetTopicName = iot-2/type/<client.typeId>/id/<client.deviceId>/cmd/<pubtopic.cmdtype.string>/<pubtopic.msgtype.string>/<pubtopic.msgformat>
	#TargetTopicName = iot-2/type/SFIOTDEVCLIENTS/id/fde000002000/cmd/DO/fmt/json

# QoS for MQTT message DELIVERY (SENDER mode):
# QOS-Level-0 = delivery once w/o confirmation; QOS-1 = delivery at least once with confirmation 
# QOS-2 (default) = delivery only once with confirmation with handshake
  # IOT QUICKSTART: only Level-0 is possible!
MessageDeliveryQoS = 0

# When buffer size in kB is set to NOT null, buffering will be enabled during sending (Buffered JMS Client).
# Buffer should be set to 0 if exceptions during sending are to be investigated:
SendBufferSize = 0
# Total number of messages that are sent by the Sender program:
No_of_messages = 10
# Burst interval (interval in msec within which no_of_msg is sent): default = 0 - sent immediately
Msg_burst_interval = 10000
# Number of messages per burst (default: 1 msg / burst)
Msg_per_burst = 1

# Store number of sent messages to file:
# WriteSentMessageCounterToFile (true | false): enables storing counter of sent messages in file
# (required if Sender routine should continue from last stop)
WriteSentMessageCounterToFile = TRUE
SentMessageCounterFileLocation = msgclnt/sentMsgCtr
# Custom content can be provided in one or multiple additional file(s)
# Are messages built from the same MessagePayloadContent OR is each message payload 
# retrieved from an individual file (MessagePayloadContent = <source_directory_path>)
# If not provided, default text message with "MqttTestMessageNo_<msg_no>" as payload)
# e.g.: MessagePayloadContent =  config/msgpayloads/msgPayload.txt (= file) 
# OR MessagePayloadContent = config/inputMsgs (= directory). If directory, directory polling interval in msec
# and max number of polling cycles can be configured (max polling time = polling cycles * polling interval
# MaxNoOfInputDirPollCycles = 0 (default = only messages currently in directory are transmitted /
# no further monitoring!
	#MessagePayloadContent =  config/msgpayloads/msgPayload_woNL.txt
	#MessagePayloadContent = config/inputMsgs
	# IOT BETA Cloud Format:
	#MessagePayloadContent = config/msgpayloads/msgPayload_iotBcloud_weatherSDK.txt
	#MessagePayloadContent = config/msgpayloads/msgPayload_iotBcloud_weatherSDK-Test2.txt
# NEW 22.05.2014 IOT Quickstart Format:
	# SFASSM: MessagePayloadContent = config/msgpayloads/msgPayload_iotcloud_SpeeMon_Dashboard.txt
	# PVCDEMO: 
	MessagePayloadContent = config/msgpayloads/msgPayload_iotObixSFIDE0000010TempSensor.txt
MaxNoOfInputDirPollCycles = 6
MsgfileInputDirPollingInterval = 10000

# Message number for MsgId and msg payload can be retrieved from input file names with attached
# numbers, e.g. takes the msgno from "<filename>_<msgno>.txt". If set to TRUE, msg no will be 
# taken from input file name. Files w/o msgno will not be transferred in this case! (Default = false)
UseMessageCounterFromFileName = FALSE

# AddMessageCounterToPayload = true | false (if true adds a msg counter 
# as first line in format "<10digits_fileCounter>###" (true = default)
	AddMessageCounterToPayload = FALSE
# Read message paylaod as TEXT or BYTEs  (TEXT | BYTES) -> TEXT currently not implemented
MessagePayloadReadAs = TEXT

# JMS configurable message:
# Custom message headers can be provided in an additional properties file
# (by default only one header is set: ResourceType = JmsTestMessage:
# XPDi custom message header MessageId can be added with MessageId = base + 10-digit-msg-counter
MessageHeaderPropertyFile = config/msgHeaders.properties
AddMessageCounterToMsgId = true
#AddMessageCounterToMsgIdBaseString = TestMsgID_


##########################
# RECEIVER configuration #
##########################

# Define whether to use the client as subscriber also (default = TRUE)
CreateSubscriber = TRUE

# TOPICs: comma separated LIST of subscribed source topics from which message(s) are received (receiver mode)
# NOTE: MQTT topic wildcard for 'any' is '#' not '*'! (e.g. /mydomain/# subscribes to all subtopics under /mydomain)
	# SubscriberTopicNames = /testdomain/things/mqtttestreceiver
	# OLD with TenantID: SubscriberTopicNames = iot-1/3632e603-b6a7-435b-bbc8-c5aafbc8a4e7/d/022/evt/weather/json
	# IOT BETA Cloud topic format:
	#SubscriberTopicNames = iot-1/d/022/evt/Device SDK Weather Sample Dataset/json
	#SubscriberTopicNames = iot-1/d/022/evt/weather/json
	# SubscriberTopicNames = iot-1/d/011/evt/SpeedMon/json
# CHANGE 22.05.2014: USE specific IOT Quickstart CLOUD topic format: <device.id> and <topic.msgtype.string> 
# are replaced with values from profile properties file:
  #SubscriberTopicNames = iot-1/d/<device.id>/evt/<topic.msgtype.string>/json
# NEW 16.07.2014: USE specific IOT Quickstart CLOUD topic format: iot-2/evt/<topic.eventtype.string>/<topic.msgtype.string>/<topic.msgformat>
# are replaced with values from profile properties file:
 # IOT DEVICE client:
	SubscriberTopicNames = iot-2/cmd/<subtopic.cmdtype.string>/<subtopic.msgtype.string>/<subtopic.msgformat>
 # IOT APP client:
  	# SubscriberTopicNames=iot-2/type/<client.typeId>/id/<client.deviceId>/evt/<subtopic.eventtype.string>/<subtopic.msgtype.string>/<subtopic.msgformat>
 	# SubscriberTopicNames=iot-2/type/SFIOTDEVCLIENTS/id/fde000002000/evt/status/fmt/json

# QOS: comma separated LIST of QoS for MQTT message reception (RECEIVER mode) that MUST match the number of given
# SubscriberTopicNames 
# QOS-Level-0 = delivery once w/o confirmation; QOS-1 = delivery at least once with confirmation 
# QOS-2 (default) = delivery only once with confirmation with handshake
	#SubscriberMsgDeliveryQos = 2,0
# IOT QUICKSTART: only Level-0 is possible!
SubscriberMsgDeliveryQos = 0

# Store number of received messages to file:
# WriteReceivedMessageCounterToFile (true | false): enables storing counter of sent messages in file
# (required if Sender routine should continue from last stop)
WriteReceivedMessageCounterToFile = TRUE
ReceivedMessageCounterFileLocation = msgclnt/receivedMsgCtr

# Write payload of received msg to file (NONE = only console output, 
# SEPARATE = 1 file per msg, APPEND = all payloads to 1 file)
WriteReceivedMsgContentToFile = APPEND
#WriteReceivedMsgContentToFile = SEPARATE
# Configure whether a new line character should be added after each appended message payload
# default = FALSE (only applies to JmsTextmessages and APPEND)
AddNLCharToRecMsgContent = FALSE
# Provide path and name for file to which payload of received msg should be written. 
# If SEPARATE, the given name will be extended with a msg_no
RecMsgContentFileLocation = msgclnt/recMpayloads

# JMS-specific: MessageSelector allows specifying message properties which must match for picking up
# messages in the reception queue / topic
# (used operators: AND, OR, LIKE, BETWEEN, =, <>, <,>, <=, >=, IS NULL, IS NOT NULL)
#MessageSelector = (MessagePurpose = 'MessageForward' AND ResourceType = 'JmsRegrTestMessage')
MessageSelector = (MyType = 'ScaleMessage' AND GUID = 'Scale_1')
